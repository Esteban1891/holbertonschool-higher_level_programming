The 'matrix_mul' Module
###########################################
doctests for matrix_mul
###########################################
using matrix_mul

import matrix_mul from 100-matrix_mul.py

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Expected TypeError if m_a not a list

    >>> matrix_mul("hi", 65)
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list

Expected TypeError if m_b not a list

    >>> matrix_mul([[4, 5, 6]], 65)
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list

Expected TypeError if m_a is not list of lists

    >>> list1 = ["hi", 4]
    >>> list2 = [[1, 2, 3]]
    >>> matrix_mul(list1, list2)
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists

Expected TypeError if m_b is not list of lists

    >>> list1 = ["hi", 4]
    >>> list2 = [[1, 2, 3]]
    >>> matrix_mul(list2, list1)
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists

Expected ValueError if m_a is empty

    >>> list1 = [[]]
    >>> list2 = [[1, 2, 3]]
    >>> matrix_mul(list1, list2)
    Traceback (most recent call last):
        ...
    ValueError: m_a cant be empty

Expected ValueError if m_b is empty

    >>> list1 = [[]]
    >>> list2 = [[1, 2, 3]]
    >>> matrix_mul(list2, list1)
    Traceback (most recent call last):
        ...
    ValueError: m_b cant be empty

Expected TypeError if m_a elements not int/float

    >>> list1 = [["hi", "hello"]]
    >>> list2 = [[1, 2, 3]]
    >>> matrix_mul(list1, list2)
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats

Expected TypeError if m_b elements not int/float

    >>> list1 = [["hi", "hello"]]
    >>> list2 = [[1, 2, 3]]
    >>> matrix_mul(list2, list1)
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats

Expecting TypeError if len of item of m_a is not equal to others

    >>> list1 = [[1, 2], [1, 2, 3.4]]
    >>> list2 = [[1, 2, 3]]
    >>> matrix_mul(list1, list2)
    Traceback (most recent call last):
        ...
    TypeError: each row of m_a must be of the same size

Expecting TypeError if len of item of m_b is not equal to others

    >>> list1 = [[1, 2], [1, 2, 3.4]]
    >>> list2 = [[1, 2, 3]]
    >>> matrix_mul(list2, list1)
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size

Expecting ValueError if len m_a[0] != len m_b

    >>> list1 = [[1,2], [1, 2]]
    >>> list2 = [[4, 2, 3], [4, 2, 3], [4, 5, 6]]
    >>> matrix_mul(list1, list2)
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied
